--- slptool/slptool.h.orig	2004-07-10 01:24:20.000000000 -0400
+++ slptool/slptool.h	2004-07-10 02:07:21.000000000 -0400
@@ -63,6 +63,7 @@
 {
     SLPToolCommand  cmd;
     const char*     lang;
+    const char*     lifetime;
     const char*     scopes;
     const char*     cmdparam1;
     const char*     cmdparam2;
--- slptool/slptool.c.orig	2002-02-25 15:22:21.000000000 -0500
+++ slptool/slptool.c	2004-07-10 02:13:55.000000000 -0400
@@ -241,6 +241,13 @@
     SLPHandle   hslp;
     char srvtype[80] = "", *s;
     int len = 0;
+    unsigned short lifetime = 0;
+
+    if(cmdline->lifetime != NULL)
+      lifetime = atoi(cmdline->lifetime);
+
+    if(lifetime == 0) 
+        lifetime = SLP_LIFETIME_MAXIMUM;
 
     if (strncasecmp(cmdline->cmdparam1, "service:", 8) == 0)
 	len = 8;
@@ -260,7 +267,7 @@
 
         result = SLPReg(hslp,
 			cmdline->cmdparam1,
-			SLP_LIFETIME_MAXIMUM,
+			lifetime,
 			srvtype,
 			cmdline->cmdparam2,
 			SLP_TRUE,
@@ -378,6 +385,19 @@
                 return 1;
             }
         }
+        else if( strcasecmp(argv[i],"-t") == 0 ||
+                 strcasecmp(argv[i],"--lifetime") == 0 )
+        {
+            i++;
+            if(i < argc)
+            {
+                cmdline->lifetime = argv[i];
+            }
+            else
+            {
+                return 1;
+            }
+        }
         else if(strcasecmp(argv[i],"findsrvs") == 0)
         {
             cmdline->cmd = FINDSRVS;
@@ -514,6 +534,7 @@
     printf("      -v (or --version) displays version of slptool and OpenSLP\n");
     printf("      -s (or --scope) followed by a comma separated list of scopes\n");
     printf("      -l (or --language) followed by a language tag\n");
+    printf("      -t (or --lifetime) followed by a time in seconds (register only)\n");
     printf("   command-and-arguments may be:\n");
     printf("      findsrvs service-type [filter]\n");
     printf("      findattrs url [attrids]\n");
